<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>.Net on Ranbook Cloud</title>
    <link>https://ranbook.cloud/tags/.net/</link>
    <description>Recent content in .Net on Ranbook Cloud</description>
    <generator>Hugo -- 0.127.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Feb 2025 17:55:55 -0400</lastBuildDate>
    <atom:link href="https://ranbook.cloud/tags/.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ASP.NET Core WebAPI Payload Logging with Serilog</title>
      <link>https://ranbook.cloud/posts/serilog-http-payload-logging/</link>
      <pubDate>Sun, 23 Feb 2025 17:55:55 -0400</pubDate>
      <guid>https://ranbook.cloud/posts/serilog-http-payload-logging/</guid>
      <description>What Imagine debugging a tricky API integration where you&amp;rsquo;re getting intermittent errors. You suspect the data being sent is the culprit, but you&amp;rsquo;re flying blind. Wouldn&amp;rsquo;t it be great if you could see exactly what&amp;rsquo;s going over the wire?.
In this article, we will look at how to create structured log events for HTTP API request/response transactions in an ASP.NET Core Web API using the Serilog logger and the HTTP Logging Middleware provided by Microsoft.</description>
    </item>
  </channel>
</rss>
